[
  {
    "id": "83eca06d2f3ec0cf865932dd2839eb35",
    "number": 1,
    "title": "git add",
    "content": "This command adds a file to the staging area.\n```\ngit add [file]\n```\nThis command adds one or more to the staging area.\n```\ngit add .\n```"
  },
  {
    "id": "902930c493cd88ff2de9f039410bd2af",
    "number": 2,
    "title": "git apply",
    "content": "Este comando aplica alterações de acordo com o arquivo indicado.\n```\ngit apply [name]\n```"
  },
  {
    "id": "d5078cca7efe30064f327921a4a2c1da",
    "number": 3,
    "title": "git branch",
    "content": "This command lists all the local branches in the current repository.\n```\ngit branch\n```\nThis command creates a new branch.\n```\ngit branch [branch name]\n```\nThis command deletes the feature branch.\n```\ngit branch -d [branch name]\n```\nThis command displays the remote branches\n```\ngit branch -r\n```\nThis command displays all branches, local and remote\n```\ngit branch -a\n```"
  },
  {
    "id": "91d7883921a228e8cfc65388e0cee452",
    "number": 4,
    "title": "git checkout",
    "content": "This command is used to switch from one branch to another.\n```\ngit checkout [branch name]\n```\nThis command creates a new branch and also switches to it.\n```\ngit checkout -b [branch name]\n```\nThis command returns to the previous commit state.\n```\ngit checkout HEAD~\n```\nThis command goes to the commit state of the tag.\n```\ngit checkout \u003ctag\u003e\n```\nThis command advances to the next commit state.\n```\ngit checkout $(git rev-list --topo-order HEAD..\u003ccurrent_branch\u003e | tail -1)\n```"
  },
  {
    "id": "abc7b9cbda8b0fa679bb85ebcf01c408",
    "number": 5,
    "title": "git clone",
    "content": "This command is used to obtain a repository from an existing URL.\n```\ngit clone [url]\n```"
  },
  {
    "id": "1dc35b6f0b4d572baa79bf88b6de6458",
    "number": 6,
    "title": "git commit",
    "content": "This command records or snapshots the file permanently in the version history.\n```\ngit commit -m \"[commit message]\"\n```\nThis command commits any files you've added with the git add command and also commits any files you've changed since then...\n```\ngit commit -a -m \"[commit message]\"\n```"
  },
  {
    "id": "23822fa0edfd618be822785ae64605cb",
    "number": 7,
    "title": "git config",
    "content": "This command defines the name of the author that will appear in the commits.\n```\ngit config --global user.name \"[name]\"\n```\nThis command defines the author's email that will appear in the commits.\n```\ngit config --global user.email \"[email]\"\n```"
  },
  {
    "id": "b7691de5fba3fe070d0d6f9313a1abc6",
    "number": 8,
    "title": "git diff",
    "content": "This command shows the file differences which are not yet staged.\n```\ngit diff\n```\nThis command shows the differences between the files in the staging area and the latest version present.\n```\ngit diff --staged\n```\nThis command shows the differences between the two branches mentioned.\n```\ngit diff [first branch] [second branch]\n```\nEste comando cria um arquivo com as modificações não comitadas.\n```\ngit diff \u003e [name].patch\n```\nEste comando cria um arquivo com as modificações não comitadas, incluindo binários e arquivos untracked.\n```\ngit diff --cached --binary \u003e [name].patch\n```"
  },
  {
    "id": "1292fd60b719723a9f7f4eeccf27754d",
    "number": 9,
    "title": "git fetch",
    "content": "This command removes remote branches that have been deleted in the remote repository.\n```\ngit fetch --prune\n```\nThis command removes local tags that have been deleted in the remote repository.\n```\ngit fetch --prune-tags\n```"
  },
  {
    "id": "7447ab217d6d583447573f183b7cec8d",
    "number": 10,
    "title": "git init",
    "content": "This command is used to start a new repository.\n```\ngit init\n```"
  },
  {
    "id": "a8eabebcb658924801a48223f331463a",
    "number": 11,
    "title": "git log",
    "content": "This command is used to list the version history for the current branch.\n```\ngit log\n```\nThis command lists the commit history of the current branch in just one line.\n```\ngit log --oneline\n```\nThis command is used to list the commit history of the current branch formatted in one line.\n```\ngit log --pretty=format:\"%C(blue)%an%Creset | %h | %C(yellow)%ad%Creset | %Cgreen%s%Creset %Cred%d%Creset\" --date=short\n```"
  },
  {
    "id": "ce597a1dfb1a01569551725de4e5cbf7",
    "number": 12,
    "title": "git merge",
    "content": "This command merges the specified branch's history into the current branch.\n```\ngit merge [branch]\n```"
  },
  {
    "id": "42ddeff90413e0ba5366c3ff6f48d5e3",
    "number": 13,
    "title": "git pull",
    "content": "This command fetches and merges changes on the remote server to your working directory.\n```\ngit pull [Repository Link]\n```"
  },
  {
    "id": "19eed817569634ce03a041a1a8aae2a7",
    "number": 14,
    "title": "git push",
    "content": "This command sends the branch commits to your remote repository.\n```\ngit push -u origin [branch]\n```\nThis command sends the committed changes to your remote repository.\n```\ngit push\n```\nThis command deletes a branch on your remote repository.\n```\ngit push origin :[branch name]\n```\nThis command clean references of the branchs.\n```\ngit remote prune origin\n```\nThis command pushes tag to your remote repository.\n```\ngit push origin [tag name]\n```\nThis command deletes a commit already pushed to the remote repository.\n```\ngit push origin HEAD --force\n```"
  },
  {
    "id": "23b0ca1b653a567c55661710af817cb5",
    "number": 15,
    "title": "git remote",
    "content": "This command is used to check the current remote repository.\n```\ngit remote -v\n```\nThis command is used to connect your local repository to the remote server.\n```\ngit remote add \u003corigin\u003e git@github.com:\u003cuser\u003e/\u003crepo\u003e.git\n```\nThis command is used to update the remote repository.\n```\ngit remote set-url \u003corigin\u003e https://\u003curl-remoto\u003e/\u003cseu-repositorio\u003e.git\n```\nThis command is used to remove remote url.\n```\ngit remote remove \u003cname\u003e\n```\nThis command is used to rename remote.\n```\ngit remote rename \u003cnome-atual-do-remote\u003e \u003cnome-novo-do-remote\u003e\n```"
  },
  {
    "id": "164b628d27b049e59648907a9c9c2189",
    "number": 16,
    "title": "git reset",
    "content": "This command unstages the file, but it preserves the file contents.\n```\ngit reset [file]\n```\nThis command undoes the last commit and moves changes locally to staged.\n```\ngit reset --soft HEAD~\n```\nThis command discards the last commit and its contents.\n```\ngit reset --hard HEAD~\n```"
  },
  {
    "id": "812c47ad14e0967cc0ef973c2cc7d809",
    "number": 17,
    "title": "git restore",
    "content": "This command restores the contents of the file to that of the last commit.\n```\ngit restore [file]\n```"
  },
  {
    "id": "c21f84edfc522c983185190523c0ed8e",
    "number": 18,
    "title": "git rm",
    "content": "This command deletes the file from your working directory and stages the deletion.\n```\ngit rm [file]\n```"
  },
  {
    "id": "2aad5e93f8be84a96d3016b3ff957903",
    "number": 19,
    "title": "git show",
    "content": "This command shows the metadata and content changes of the specified commit.\n```\ngit show [commit]\n```\nThis command displays the modified files in the current commit.\n```\ngit show --stat\n```\nThis command displays the modified files in the specific commit.\n```\ngit show --stat [commit]\n```"
  },
  {
    "id": "7465ec6ce79ff92a006b9f2d9c7cf93b",
    "number": 20,
    "title": "git stash",
    "content": "This command temporarily stores all the modified tracked files.\n```\ngit stash save [message]\n```\nThis command restores the most recently stashed files.\n```\ngit stash pop\n```\nThis command lists all stashed changesets.\n```\ngit stash list\n```\nThis command discards the most recently stashed changeset.\n```\ngit stash drop\n```\nThis command will show the changes contained in the stash.\n```\ngit stash show stash@{0}\n```\nThis command will show the changes contained in the contents of the files.\n```\ngit stash show -p stash@{0}\n```\nThis command save code changes of the files specifics\n```\ngit stash push -m \"stash-message\" -- filename1.txt filename2.txt\t\n```\nEste comando grava em um arquivo as alterações não comitadas.\n```\ngit diff \u003e [name].patch\n```"
  },
  {
    "id": "402a68100a64148c4892a8fc2578cae1",
    "number": 21,
    "title": "git status",
    "content": "This command lists all the files that have to be committed.\n```\ngit status\n```"
  },
  {
    "id": "2f419cc9a7b7245fb9c90af7eba1a160",
    "number": 22,
    "title": "git tag",
    "content": "This command is used to create tag.\n```\ngit tag [tag]\n```\n\nThis command is used to delete tag.\n```\ngit tag -d [tag]\n```\nThis command is used to list existing tags.\n```\ngit tag\n```\nCommand to change the tag commit.\n```\ngit tag -f v1.0 4736E13\n```\nSend the changed tag to remote repository.\n```\ngit push --force origin v1.0\n```\nSend new tag to remote repository.\n```\ngit push --tags\n```\nSend deleted tag to remote repository.\n```\ngit push origin :refs/tags/[tag]\n```"
  }
]